/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { LocationSegments, MatchResults, RouterHistory } from "@stencil/router";
import { MenuItem } from "./interfaces/MenuItem";
import { ExtendedHistoryType } from "./interfaces/ExtendedHistoryType";
import { BreadcrumbSegment } from "./interfaces/BreadcrumbSegment";
import { StyleCustomisation } from "./interfaces/StyleCustomisation";
import { SelectType } from "./interfaces/FormModel";
import { WizardStep } from "./interfaces/Wizard";
export namespace Components {
    interface DropdownRenderer {
        "active": boolean;
        "somethingChanged": boolean;
        "url": any;
    }
    interface EventExpandableRenderer {
        "active": boolean;
        "firstMenuChild": any;
        "history": RouterHistory;
        "item": any;
        "somethingChanged": boolean;
        "url": any;
    }
    interface ExpandableRenderer {
        "active": boolean;
        "firstMenuChild": any;
        "history": RouterHistory;
        "somethingChanged": boolean;
        "url": any;
    }
    interface MobileProfileRenderer {
        "userInfo": any;
    }
    interface PskAccordion {
        "layout": string;
        "multiple": boolean;
    }
    interface PskAccordionItem {
        "layout": string;
        "opened": boolean;
        "title": string;
    }
    interface PskAppMenu {
        "hamburgerMaxWidth"?: number;
        "historyType": ExtendedHistoryType;
        "itemRenderer"?: string;
        "menuItems"?: MenuItem[];
    }
    interface PskAppRoot {
        "controller": any;
        "disableSidebar": boolean;
    }
    interface PskAppRouter {
        "historyType": ExtendedHistoryType;
        "routesItems"?: MenuItem[];
    }
    interface PskAttachmentsList {
        "attachmentsClass": string;
        "files": any;
        "noAttachmentsText": string;
        "readOnly": boolean;
    }
    interface PskBarcodeGenerator {
        "data": any;
        "includeText": boolean;
        "size"?: any;
        "title": string;
        "type": string;
    }
    interface PskBarcodeScanner {
        "allowFileBrowsing": boolean;
        "data": any;
        "normalSize": boolean;
        "title": string;
    }
    interface PskBreadcrumbNavigator {
        "eventName": string | null;
        "segments": BreadcrumbSegment[];
    }
    interface PskButton {
        "buttonClass": string | null;
        "disabled": string | boolean;
        "doubleClickEventName": string | null;
        "eventData": any | null;
        "eventDispatcher": string | null;
        "eventName": string | null;
        "label": string | null;
        "touchEventName": string | null;
        "type": string;
    }
    interface PskButtonGroup {
        "classes": string | null;
        "icon": string | null;
        "iconColor": string | null;
        "label": string | null;
        "opened": boolean;
    }
    interface PskButtonLink {
        "eventData": any | null;
        "eventDispatcher": string | null;
        "eventName": string | null;
        "icon"?: string;
        "name"?: string;
        "page": string;
    }
    interface PskButtonTest {
    }
    interface PskCard {
        "id": string;
        "title": string;
    }
    interface PskChapter {
        "guid": string;
        "title": string;
    }
    interface PskChapterWrapper {
        "title": string;
    }
    interface PskCheckbox {
        "checkboxLabel": any;
        "checked"?: string;
        "checkedValue"?: string | null;
        "label": string;
        "name"?: string | null;
        "required"?: boolean;
        "uncheckedValue"?: string | null;
        "value"?: any;
    }
    interface PskCode {
        "language": string;
        "title": string;
    }
    interface PskCondition {
        "condition": any | null;
    }
    interface PskContainer {
        "controllerName"?: string | null;
        "history": RouterHistory;
        "htmlFilePath"?: string | null;
        "parentCallback": Function | null;
    }
    interface PskControllerDescriptor {
        "title": string;
    }
    interface PskCopyClipboard {
        "id": string;
    }
    interface PskCustom {
    }
    interface PskDate {
        "format": string | null;
        "hoverFormat": string | null;
        "value": string | number | null;
    }
    interface PskDateInput {
        "dataFormat"?: string | null;
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "name"?: string | null;
        "placeholder"?: string | null;
        "readOnly"?: boolean;
        "required"?: string;
        "value"?: string | null;
    }
    interface PskDefaultRenderer {
        "disableSidebar": boolean;
        "mobileLayout": boolean;
    }
    interface PskDescription {
        "title": string;
    }
    interface PskDetails {
        "eventData": any | null;
        "eventDispatcher": string | null;
        "eventName": string | null;
        "layout": string;
        "opened": boolean;
        "title": string;
    }
    interface PskEcho {
        "value": string | null;
    }
    interface PskEmailInput {
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "name"?: string | null;
        "placeholder"?: string | null;
        "readOnly"?: boolean;
        "required"?: boolean;
        "value"?: string | null;
    }
    interface PskEventDescriptor {
        "title": string;
    }
    interface PskExample {
        "title": string;
    }
    interface PskFilesChooser {
        "accept"?: string;
        "eventName"?: string;
        "filesAppend"?: boolean;
        "label": string;
        "listFiles"?: boolean;
    }
    interface PskFloatingMenu {
        "opened": boolean;
    }
    interface PskForEach {
        "dataViewModel"?: string | null;
    }
    interface PskForm {
        "controllerName": string | null;
        "formActions"?: string | null;
        "history": RouterHistory;
    }
    interface PskFormRow {
        "layout": string | null;
    }
    interface PskGrid {
        "columns": number | null;
        "layout": string | null;
    }
    interface PskHighlight {
        "title": string;
        "typeOfHighlight": string;
    }
    interface PskHoc {
    }
    interface PskIcon {
        "classes"?: string | null;
        "color"?: string | null;
        "disableColor"?: boolean;
        "icon": string | null;
    }
    interface PskIconChooser {
        "iconsColor"?: string | null;
        "iconsSize"?: string | null;
        "value": string | null;
    }
    interface PskImg {
        "height": string;
        "src": string;
        "title": string;
        "width": string;
    }
    interface PskImgInput {
        "alt"?: string | null;
        "eventName"?: string | null;
        "label"?: string | null;
        "placeholder"?: string;
        "src"?: any | null;
    }
    interface PskInput {
        "dataDate"?: string;
        "dataDateFormat"?: string | null;
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "name"?: string | null;
        "placeholder"?: string | null;
        "readOnly"?: boolean;
        "required"?: boolean;
        /**
          * Property used only by other components psk-text-input, psk-email-input...
         */
        "specificProps"?: any;
        "type"?: string;
        "value"?: string | null;
    }
    interface PskLabel {
        "for": string | null;
        "label": string;
    }
    interface PskLabelTest {
        "firstlabel": any;
        "labelValue": any;
        "secondLabel": any;
        "thirdLabel": any;
    }
    interface PskLayout {
        "alignContent": string | null;
        "alignContentX": string | null;
        "alignContentY": string | null;
        "alignItems": string | null;
        "alignItemsX": string | null;
        "alignItemsY": string | null;
        "autoColumns": string | null;
        "autoFlow": string | null;
        "autoRows": string | null;
        "columnGap": string | null;
        "columns": number | null;
        "gap": string | null;
        "rowGap": string | null;
        "rows": number | null;
        "templateColumns": string | null;
        "templateRows": string | null;
    }
    interface PskLayoutItem {
        "align": string | null;
        "alignX": string | null;
        "alignY": string | null;
        "column": string | null;
        "columnEnd": string | null;
        "columnStart": string | null;
        "row": string | null;
        "rowEnd": string | null;
        "rowStart": string | null;
    }
    interface PskLink {
        "chapter": string;
        "page": string;
        "tag": string;
    }
    interface PskList {
        "listType": string;
    }
    interface PskListFeedbacks {
        "alertRenderer"?: string;
        "messagesToDisplay"?: number;
        "styleCustomisation"?: StyleCustomisation | string;
        "timeAlive"?: number;
        "toastRenderer"?: string;
    }
    interface PskLiveCode {
        "language": string;
        "value": string;
    }
    interface PskLoadPlaceholder {
    }
    interface PskMenuItemRenderer {
        "active": boolean;
        "historyType": ExtendedHistoryType;
        "value": MenuItem;
    }
    interface PskMobile {
        "controllerName"?: string | null;
        "disableHeader": boolean;
        "disableSidebar": boolean;
        "enableBack": boolean;
        "history": RouterHistory;
        "title": string;
        "toggleOptions": (visible: any) => Promise<void>;
        "toggleSidebar": (visible: any) => Promise<void>;
    }
    interface PskModal {
        "eventName": string | null;
        "expanded": boolean;
        "opened": boolean;
    }
    interface PskNumberInput {
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "name"?: string | null;
        "placeholder"?: string | null;
        "readOnly"?: boolean;
        "required"?: boolean;
        "value"?: string | null;
    }
    interface PskPage {
        "badgeBackgroundColor": string;
        "badgeText": string;
        "badgeTextColor": string;
        "hasToc": boolean;
        "navigationTitle": string;
        "pageClass": string;
        "subTitle": string;
        "title": string;
        "tocTitle": string;
    }
    interface PskPageLoader {
        "pageUrl": string;
        "type": string;
    }
    interface PskPageNotFound {
        "basePath"?: string;
        "pageRenderer"?: string;
        "urlDestination"?: string;
    }
    interface PskPageNotFoundRenderer {
    }
    interface PskPasswordInput {
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "name"?: string | null;
        "placeholder"?: string | null;
        "readOnly"?: boolean;
        "required"?: boolean;
        "value"?: string | null;
    }
    interface PskPinPopup {
        "opened": boolean;
    }
    interface PskPropertyDescriptor {
        "title": string;
    }
    interface PskRadio {
        "checked"?: boolean;
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "name"?: string | null;
        "readOnly"?: boolean;
        "value"?: string | null;
    }
    interface PskRadioGroup {
        "invalid"?: boolean;
        "label"?: string | null;
        "name"?: string | null;
        "required"?: boolean;
        "value"?: string | null;
    }
    interface PskRouteRedirect {
        "history": RouterHistory;
        "url": any;
    }
    interface PskSelect {
        "disabled"?: boolean;
        "eventData": any | null;
        "eventName": string | null;
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "placeholder"?: string | null;
        "required"?: boolean;
        "selectOptions"?: string | null;
        "selectionType"?: SelectType;
        "value"?: string | null;
    }
    interface PskSlideshow {
        "caption": string;
        "fadeSeconds": number;
        "images": string;
        "title": string;
        "visibleSeconds": number;
    }
    interface PskSsapp {
        "appName": string;
        "history": RouterHistory;
        "landingPath": string;
        "match": MatchResults;
        "seed": string;
    }
    interface PskStepper {
        "activeStep": WizardStep;
        "componentRender": string;
        "handleStepChange": Function;
        "wizardSteps": WizardStep[];
    }
    interface PskStepperRenderer {
        "activeStep": WizardStep;
        "handleStepChange": Function;
        "wizardSteps": WizardStep[];
    }
    interface PskStyle {
        "src": string | null;
    }
    interface PskSwitchButton {
        "active": string | null;
        "eventDispatcher": string | null;
        "inactive": string | null;
        "title": string | null;
        "toggleEvent": string | null;
    }
    interface PskTab {
        "title": string;
    }
    interface PskTabNavigator {
        "default": number;
        "layout": string;
    }
    interface PskTable {
        "cellsWidth": string;
        "footer": boolean;
        "header": boolean;
    }
    interface PskTextInput {
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "name"?: string | null;
        "placeholder"?: string | null;
        "readOnly"?: boolean;
        "required"?: boolean;
        "value": any;
    }
    interface PskTextarea {
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "name"?: string | null;
        "placeholder"?: string | null;
        "readOnly"?: boolean;
        "required"?: boolean;
        "value"?: string | null;
    }
    interface PskToc {
        "title": string;
    }
    interface PskToolbar {
        "actions": string | null;
        "eventData": string | null;
        "icons": boolean;
    }
    interface PskUiAlert {
        "message": any;
        "styleCustomisation": StyleCustomisation | string;
        "timeAlive": any;
        "typeOfAlert": string;
    }
    interface PskUiLoader {
        "shouldBeRendered": boolean;
    }
    interface PskUiToast {
        "message": any;
        "styleCustomisation"?: StyleCustomisation | string;
        "timeMeasure": string;
        "timeSinceCreation": number;
    }
    interface PskUserProfile {
        "profileRenderer": any;
        "userInfo": any;
    }
    interface PskUserProfileRenderer {
        "userInfo": any;
    }
    interface PskWizard {
        "componentRender": string;
        "wizardSteps"?: WizardStep[];
    }
    interface QueryPageLink {
        "activeClass": string;
        "anchorClass"?: string;
        "anchorId"?: string;
        "anchorRole"?: string;
        "anchorTabIndex"?: string;
        "anchorTitle"?: string;
        "ariaHaspopup"?: string;
        "ariaLabel"?: string;
        "ariaPosinset"?: string;
        "ariaSetsize"?: number;
        /**
          * Custom tag to use instead of an anchor
         */
        "custom": string;
        "exact": boolean;
        "history"?: RouterHistory;
        "location"?: LocationSegments;
        "strict": boolean;
        "url"?: string;
        "urlMatch"?: string;
    }
    interface QueryPagesRouter {
        "history": RouterHistory;
        "location": LocationSegments;
        "pages": MenuItem[];
        "redirectTo": string;
    }
    interface SidebarRenderer {
        "active": boolean;
        "historyType": ExtendedHistoryType;
        "value": MenuItem;
    }
}
declare global {
    interface HTMLDropdownRendererElement extends Components.DropdownRenderer, HTMLStencilElement {
    }
    var HTMLDropdownRendererElement: {
        prototype: HTMLDropdownRendererElement;
        new (): HTMLDropdownRendererElement;
    };
    interface HTMLEventExpandableRendererElement extends Components.EventExpandableRenderer, HTMLStencilElement {
    }
    var HTMLEventExpandableRendererElement: {
        prototype: HTMLEventExpandableRendererElement;
        new (): HTMLEventExpandableRendererElement;
    };
    interface HTMLExpandableRendererElement extends Components.ExpandableRenderer, HTMLStencilElement {
    }
    var HTMLExpandableRendererElement: {
        prototype: HTMLExpandableRendererElement;
        new (): HTMLExpandableRendererElement;
    };
    interface HTMLMobileProfileRendererElement extends Components.MobileProfileRenderer, HTMLStencilElement {
    }
    var HTMLMobileProfileRendererElement: {
        prototype: HTMLMobileProfileRendererElement;
        new (): HTMLMobileProfileRendererElement;
    };
    interface HTMLPskAccordionElement extends Components.PskAccordion, HTMLStencilElement {
    }
    var HTMLPskAccordionElement: {
        prototype: HTMLPskAccordionElement;
        new (): HTMLPskAccordionElement;
    };
    interface HTMLPskAccordionItemElement extends Components.PskAccordionItem, HTMLStencilElement {
    }
    var HTMLPskAccordionItemElement: {
        prototype: HTMLPskAccordionItemElement;
        new (): HTMLPskAccordionItemElement;
    };
    interface HTMLPskAppMenuElement extends Components.PskAppMenu, HTMLStencilElement {
    }
    var HTMLPskAppMenuElement: {
        prototype: HTMLPskAppMenuElement;
        new (): HTMLPskAppMenuElement;
    };
    interface HTMLPskAppRootElement extends Components.PskAppRoot, HTMLStencilElement {
    }
    var HTMLPskAppRootElement: {
        prototype: HTMLPskAppRootElement;
        new (): HTMLPskAppRootElement;
    };
    interface HTMLPskAppRouterElement extends Components.PskAppRouter, HTMLStencilElement {
    }
    var HTMLPskAppRouterElement: {
        prototype: HTMLPskAppRouterElement;
        new (): HTMLPskAppRouterElement;
    };
    interface HTMLPskAttachmentsListElement extends Components.PskAttachmentsList, HTMLStencilElement {
    }
    var HTMLPskAttachmentsListElement: {
        prototype: HTMLPskAttachmentsListElement;
        new (): HTMLPskAttachmentsListElement;
    };
    interface HTMLPskBarcodeGeneratorElement extends Components.PskBarcodeGenerator, HTMLStencilElement {
    }
    var HTMLPskBarcodeGeneratorElement: {
        prototype: HTMLPskBarcodeGeneratorElement;
        new (): HTMLPskBarcodeGeneratorElement;
    };
    interface HTMLPskBarcodeScannerElement extends Components.PskBarcodeScanner, HTMLStencilElement {
    }
    var HTMLPskBarcodeScannerElement: {
        prototype: HTMLPskBarcodeScannerElement;
        new (): HTMLPskBarcodeScannerElement;
    };
    interface HTMLPskBreadcrumbNavigatorElement extends Components.PskBreadcrumbNavigator, HTMLStencilElement {
    }
    var HTMLPskBreadcrumbNavigatorElement: {
        prototype: HTMLPskBreadcrumbNavigatorElement;
        new (): HTMLPskBreadcrumbNavigatorElement;
    };
    interface HTMLPskButtonElement extends Components.PskButton, HTMLStencilElement {
    }
    var HTMLPskButtonElement: {
        prototype: HTMLPskButtonElement;
        new (): HTMLPskButtonElement;
    };
    interface HTMLPskButtonGroupElement extends Components.PskButtonGroup, HTMLStencilElement {
    }
    var HTMLPskButtonGroupElement: {
        prototype: HTMLPskButtonGroupElement;
        new (): HTMLPskButtonGroupElement;
    };
    interface HTMLPskButtonLinkElement extends Components.PskButtonLink, HTMLStencilElement {
    }
    var HTMLPskButtonLinkElement: {
        prototype: HTMLPskButtonLinkElement;
        new (): HTMLPskButtonLinkElement;
    };
    interface HTMLPskButtonTestElement extends Components.PskButtonTest, HTMLStencilElement {
    }
    var HTMLPskButtonTestElement: {
        prototype: HTMLPskButtonTestElement;
        new (): HTMLPskButtonTestElement;
    };
    interface HTMLPskCardElement extends Components.PskCard, HTMLStencilElement {
    }
    var HTMLPskCardElement: {
        prototype: HTMLPskCardElement;
        new (): HTMLPskCardElement;
    };
    interface HTMLPskChapterElement extends Components.PskChapter, HTMLStencilElement {
    }
    var HTMLPskChapterElement: {
        prototype: HTMLPskChapterElement;
        new (): HTMLPskChapterElement;
    };
    interface HTMLPskChapterWrapperElement extends Components.PskChapterWrapper, HTMLStencilElement {
    }
    var HTMLPskChapterWrapperElement: {
        prototype: HTMLPskChapterWrapperElement;
        new (): HTMLPskChapterWrapperElement;
    };
    interface HTMLPskCheckboxElement extends Components.PskCheckbox, HTMLStencilElement {
    }
    var HTMLPskCheckboxElement: {
        prototype: HTMLPskCheckboxElement;
        new (): HTMLPskCheckboxElement;
    };
    interface HTMLPskCodeElement extends Components.PskCode, HTMLStencilElement {
    }
    var HTMLPskCodeElement: {
        prototype: HTMLPskCodeElement;
        new (): HTMLPskCodeElement;
    };
    interface HTMLPskConditionElement extends Components.PskCondition, HTMLStencilElement {
    }
    var HTMLPskConditionElement: {
        prototype: HTMLPskConditionElement;
        new (): HTMLPskConditionElement;
    };
    interface HTMLPskContainerElement extends Components.PskContainer, HTMLStencilElement {
    }
    var HTMLPskContainerElement: {
        prototype: HTMLPskContainerElement;
        new (): HTMLPskContainerElement;
    };
    interface HTMLPskControllerDescriptorElement extends Components.PskControllerDescriptor, HTMLStencilElement {
    }
    var HTMLPskControllerDescriptorElement: {
        prototype: HTMLPskControllerDescriptorElement;
        new (): HTMLPskControllerDescriptorElement;
    };
    interface HTMLPskCopyClipboardElement extends Components.PskCopyClipboard, HTMLStencilElement {
    }
    var HTMLPskCopyClipboardElement: {
        prototype: HTMLPskCopyClipboardElement;
        new (): HTMLPskCopyClipboardElement;
    };
    interface HTMLPskCustomElement extends Components.PskCustom, HTMLStencilElement {
    }
    var HTMLPskCustomElement: {
        prototype: HTMLPskCustomElement;
        new (): HTMLPskCustomElement;
    };
    interface HTMLPskDateElement extends Components.PskDate, HTMLStencilElement {
    }
    var HTMLPskDateElement: {
        prototype: HTMLPskDateElement;
        new (): HTMLPskDateElement;
    };
    interface HTMLPskDateInputElement extends Components.PskDateInput, HTMLStencilElement {
    }
    var HTMLPskDateInputElement: {
        prototype: HTMLPskDateInputElement;
        new (): HTMLPskDateInputElement;
    };
    interface HTMLPskDefaultRendererElement extends Components.PskDefaultRenderer, HTMLStencilElement {
    }
    var HTMLPskDefaultRendererElement: {
        prototype: HTMLPskDefaultRendererElement;
        new (): HTMLPskDefaultRendererElement;
    };
    interface HTMLPskDescriptionElement extends Components.PskDescription, HTMLStencilElement {
    }
    var HTMLPskDescriptionElement: {
        prototype: HTMLPskDescriptionElement;
        new (): HTMLPskDescriptionElement;
    };
    interface HTMLPskDetailsElement extends Components.PskDetails, HTMLStencilElement {
    }
    var HTMLPskDetailsElement: {
        prototype: HTMLPskDetailsElement;
        new (): HTMLPskDetailsElement;
    };
    interface HTMLPskEchoElement extends Components.PskEcho, HTMLStencilElement {
    }
    var HTMLPskEchoElement: {
        prototype: HTMLPskEchoElement;
        new (): HTMLPskEchoElement;
    };
    interface HTMLPskEmailInputElement extends Components.PskEmailInput, HTMLStencilElement {
    }
    var HTMLPskEmailInputElement: {
        prototype: HTMLPskEmailInputElement;
        new (): HTMLPskEmailInputElement;
    };
    interface HTMLPskEventDescriptorElement extends Components.PskEventDescriptor, HTMLStencilElement {
    }
    var HTMLPskEventDescriptorElement: {
        prototype: HTMLPskEventDescriptorElement;
        new (): HTMLPskEventDescriptorElement;
    };
    interface HTMLPskExampleElement extends Components.PskExample, HTMLStencilElement {
    }
    var HTMLPskExampleElement: {
        prototype: HTMLPskExampleElement;
        new (): HTMLPskExampleElement;
    };
    interface HTMLPskFilesChooserElement extends Components.PskFilesChooser, HTMLStencilElement {
    }
    var HTMLPskFilesChooserElement: {
        prototype: HTMLPskFilesChooserElement;
        new (): HTMLPskFilesChooserElement;
    };
    interface HTMLPskFloatingMenuElement extends Components.PskFloatingMenu, HTMLStencilElement {
    }
    var HTMLPskFloatingMenuElement: {
        prototype: HTMLPskFloatingMenuElement;
        new (): HTMLPskFloatingMenuElement;
    };
    interface HTMLPskForEachElement extends Components.PskForEach, HTMLStencilElement {
    }
    var HTMLPskForEachElement: {
        prototype: HTMLPskForEachElement;
        new (): HTMLPskForEachElement;
    };
    interface HTMLPskFormElement extends Components.PskForm, HTMLStencilElement {
    }
    var HTMLPskFormElement: {
        prototype: HTMLPskFormElement;
        new (): HTMLPskFormElement;
    };
    interface HTMLPskFormRowElement extends Components.PskFormRow, HTMLStencilElement {
    }
    var HTMLPskFormRowElement: {
        prototype: HTMLPskFormRowElement;
        new (): HTMLPskFormRowElement;
    };
    interface HTMLPskGridElement extends Components.PskGrid, HTMLStencilElement {
    }
    var HTMLPskGridElement: {
        prototype: HTMLPskGridElement;
        new (): HTMLPskGridElement;
    };
    interface HTMLPskHighlightElement extends Components.PskHighlight, HTMLStencilElement {
    }
    var HTMLPskHighlightElement: {
        prototype: HTMLPskHighlightElement;
        new (): HTMLPskHighlightElement;
    };
    interface HTMLPskHocElement extends Components.PskHoc, HTMLStencilElement {
    }
    var HTMLPskHocElement: {
        prototype: HTMLPskHocElement;
        new (): HTMLPskHocElement;
    };
    interface HTMLPskIconElement extends Components.PskIcon, HTMLStencilElement {
    }
    var HTMLPskIconElement: {
        prototype: HTMLPskIconElement;
        new (): HTMLPskIconElement;
    };
    interface HTMLPskIconChooserElement extends Components.PskIconChooser, HTMLStencilElement {
    }
    var HTMLPskIconChooserElement: {
        prototype: HTMLPskIconChooserElement;
        new (): HTMLPskIconChooserElement;
    };
    interface HTMLPskImgElement extends Components.PskImg, HTMLStencilElement {
    }
    var HTMLPskImgElement: {
        prototype: HTMLPskImgElement;
        new (): HTMLPskImgElement;
    };
    interface HTMLPskImgInputElement extends Components.PskImgInput, HTMLStencilElement {
    }
    var HTMLPskImgInputElement: {
        prototype: HTMLPskImgInputElement;
        new (): HTMLPskImgInputElement;
    };
    interface HTMLPskInputElement extends Components.PskInput, HTMLStencilElement {
    }
    var HTMLPskInputElement: {
        prototype: HTMLPskInputElement;
        new (): HTMLPskInputElement;
    };
    interface HTMLPskLabelElement extends Components.PskLabel, HTMLStencilElement {
    }
    var HTMLPskLabelElement: {
        prototype: HTMLPskLabelElement;
        new (): HTMLPskLabelElement;
    };
    interface HTMLPskLabelTestElement extends Components.PskLabelTest, HTMLStencilElement {
    }
    var HTMLPskLabelTestElement: {
        prototype: HTMLPskLabelTestElement;
        new (): HTMLPskLabelTestElement;
    };
    interface HTMLPskLayoutElement extends Components.PskLayout, HTMLStencilElement {
    }
    var HTMLPskLayoutElement: {
        prototype: HTMLPskLayoutElement;
        new (): HTMLPskLayoutElement;
    };
    interface HTMLPskLayoutItemElement extends Components.PskLayoutItem, HTMLStencilElement {
    }
    var HTMLPskLayoutItemElement: {
        prototype: HTMLPskLayoutItemElement;
        new (): HTMLPskLayoutItemElement;
    };
    interface HTMLPskLinkElement extends Components.PskLink, HTMLStencilElement {
    }
    var HTMLPskLinkElement: {
        prototype: HTMLPskLinkElement;
        new (): HTMLPskLinkElement;
    };
    interface HTMLPskListElement extends Components.PskList, HTMLStencilElement {
    }
    var HTMLPskListElement: {
        prototype: HTMLPskListElement;
        new (): HTMLPskListElement;
    };
    interface HTMLPskListFeedbacksElement extends Components.PskListFeedbacks, HTMLStencilElement {
    }
    var HTMLPskListFeedbacksElement: {
        prototype: HTMLPskListFeedbacksElement;
        new (): HTMLPskListFeedbacksElement;
    };
    interface HTMLPskLiveCodeElement extends Components.PskLiveCode, HTMLStencilElement {
    }
    var HTMLPskLiveCodeElement: {
        prototype: HTMLPskLiveCodeElement;
        new (): HTMLPskLiveCodeElement;
    };
    interface HTMLPskLoadPlaceholderElement extends Components.PskLoadPlaceholder, HTMLStencilElement {
    }
    var HTMLPskLoadPlaceholderElement: {
        prototype: HTMLPskLoadPlaceholderElement;
        new (): HTMLPskLoadPlaceholderElement;
    };
    interface HTMLPskMenuItemRendererElement extends Components.PskMenuItemRenderer, HTMLStencilElement {
    }
    var HTMLPskMenuItemRendererElement: {
        prototype: HTMLPskMenuItemRendererElement;
        new (): HTMLPskMenuItemRendererElement;
    };
    interface HTMLPskMobileElement extends Components.PskMobile, HTMLStencilElement {
    }
    var HTMLPskMobileElement: {
        prototype: HTMLPskMobileElement;
        new (): HTMLPskMobileElement;
    };
    interface HTMLPskModalElement extends Components.PskModal, HTMLStencilElement {
    }
    var HTMLPskModalElement: {
        prototype: HTMLPskModalElement;
        new (): HTMLPskModalElement;
    };
    interface HTMLPskNumberInputElement extends Components.PskNumberInput, HTMLStencilElement {
    }
    var HTMLPskNumberInputElement: {
        prototype: HTMLPskNumberInputElement;
        new (): HTMLPskNumberInputElement;
    };
    interface HTMLPskPageElement extends Components.PskPage, HTMLStencilElement {
    }
    var HTMLPskPageElement: {
        prototype: HTMLPskPageElement;
        new (): HTMLPskPageElement;
    };
    interface HTMLPskPageLoaderElement extends Components.PskPageLoader, HTMLStencilElement {
    }
    var HTMLPskPageLoaderElement: {
        prototype: HTMLPskPageLoaderElement;
        new (): HTMLPskPageLoaderElement;
    };
    interface HTMLPskPageNotFoundElement extends Components.PskPageNotFound, HTMLStencilElement {
    }
    var HTMLPskPageNotFoundElement: {
        prototype: HTMLPskPageNotFoundElement;
        new (): HTMLPskPageNotFoundElement;
    };
    interface HTMLPskPageNotFoundRendererElement extends Components.PskPageNotFoundRenderer, HTMLStencilElement {
    }
    var HTMLPskPageNotFoundRendererElement: {
        prototype: HTMLPskPageNotFoundRendererElement;
        new (): HTMLPskPageNotFoundRendererElement;
    };
    interface HTMLPskPasswordInputElement extends Components.PskPasswordInput, HTMLStencilElement {
    }
    var HTMLPskPasswordInputElement: {
        prototype: HTMLPskPasswordInputElement;
        new (): HTMLPskPasswordInputElement;
    };
    interface HTMLPskPinPopupElement extends Components.PskPinPopup, HTMLStencilElement {
    }
    var HTMLPskPinPopupElement: {
        prototype: HTMLPskPinPopupElement;
        new (): HTMLPskPinPopupElement;
    };
    interface HTMLPskPropertyDescriptorElement extends Components.PskPropertyDescriptor, HTMLStencilElement {
    }
    var HTMLPskPropertyDescriptorElement: {
        prototype: HTMLPskPropertyDescriptorElement;
        new (): HTMLPskPropertyDescriptorElement;
    };
    interface HTMLPskRadioElement extends Components.PskRadio, HTMLStencilElement {
    }
    var HTMLPskRadioElement: {
        prototype: HTMLPskRadioElement;
        new (): HTMLPskRadioElement;
    };
    interface HTMLPskRadioGroupElement extends Components.PskRadioGroup, HTMLStencilElement {
    }
    var HTMLPskRadioGroupElement: {
        prototype: HTMLPskRadioGroupElement;
        new (): HTMLPskRadioGroupElement;
    };
    interface HTMLPskRouteRedirectElement extends Components.PskRouteRedirect, HTMLStencilElement {
    }
    var HTMLPskRouteRedirectElement: {
        prototype: HTMLPskRouteRedirectElement;
        new (): HTMLPskRouteRedirectElement;
    };
    interface HTMLPskSelectElement extends Components.PskSelect, HTMLStencilElement {
    }
    var HTMLPskSelectElement: {
        prototype: HTMLPskSelectElement;
        new (): HTMLPskSelectElement;
    };
    interface HTMLPskSlideshowElement extends Components.PskSlideshow, HTMLStencilElement {
    }
    var HTMLPskSlideshowElement: {
        prototype: HTMLPskSlideshowElement;
        new (): HTMLPskSlideshowElement;
    };
    interface HTMLPskSsappElement extends Components.PskSsapp, HTMLStencilElement {
    }
    var HTMLPskSsappElement: {
        prototype: HTMLPskSsappElement;
        new (): HTMLPskSsappElement;
    };
    interface HTMLPskStepperElement extends Components.PskStepper, HTMLStencilElement {
    }
    var HTMLPskStepperElement: {
        prototype: HTMLPskStepperElement;
        new (): HTMLPskStepperElement;
    };
    interface HTMLPskStepperRendererElement extends Components.PskStepperRenderer, HTMLStencilElement {
    }
    var HTMLPskStepperRendererElement: {
        prototype: HTMLPskStepperRendererElement;
        new (): HTMLPskStepperRendererElement;
    };
    interface HTMLPskStyleElement extends Components.PskStyle, HTMLStencilElement {
    }
    var HTMLPskStyleElement: {
        prototype: HTMLPskStyleElement;
        new (): HTMLPskStyleElement;
    };
    interface HTMLPskSwitchButtonElement extends Components.PskSwitchButton, HTMLStencilElement {
    }
    var HTMLPskSwitchButtonElement: {
        prototype: HTMLPskSwitchButtonElement;
        new (): HTMLPskSwitchButtonElement;
    };
    interface HTMLPskTabElement extends Components.PskTab, HTMLStencilElement {
    }
    var HTMLPskTabElement: {
        prototype: HTMLPskTabElement;
        new (): HTMLPskTabElement;
    };
    interface HTMLPskTabNavigatorElement extends Components.PskTabNavigator, HTMLStencilElement {
    }
    var HTMLPskTabNavigatorElement: {
        prototype: HTMLPskTabNavigatorElement;
        new (): HTMLPskTabNavigatorElement;
    };
    interface HTMLPskTableElement extends Components.PskTable, HTMLStencilElement {
    }
    var HTMLPskTableElement: {
        prototype: HTMLPskTableElement;
        new (): HTMLPskTableElement;
    };
    interface HTMLPskTextInputElement extends Components.PskTextInput, HTMLStencilElement {
    }
    var HTMLPskTextInputElement: {
        prototype: HTMLPskTextInputElement;
        new (): HTMLPskTextInputElement;
    };
    interface HTMLPskTextareaElement extends Components.PskTextarea, HTMLStencilElement {
    }
    var HTMLPskTextareaElement: {
        prototype: HTMLPskTextareaElement;
        new (): HTMLPskTextareaElement;
    };
    interface HTMLPskTocElement extends Components.PskToc, HTMLStencilElement {
    }
    var HTMLPskTocElement: {
        prototype: HTMLPskTocElement;
        new (): HTMLPskTocElement;
    };
    interface HTMLPskToolbarElement extends Components.PskToolbar, HTMLStencilElement {
    }
    var HTMLPskToolbarElement: {
        prototype: HTMLPskToolbarElement;
        new (): HTMLPskToolbarElement;
    };
    interface HTMLPskUiAlertElement extends Components.PskUiAlert, HTMLStencilElement {
    }
    var HTMLPskUiAlertElement: {
        prototype: HTMLPskUiAlertElement;
        new (): HTMLPskUiAlertElement;
    };
    interface HTMLPskUiLoaderElement extends Components.PskUiLoader, HTMLStencilElement {
    }
    var HTMLPskUiLoaderElement: {
        prototype: HTMLPskUiLoaderElement;
        new (): HTMLPskUiLoaderElement;
    };
    interface HTMLPskUiToastElement extends Components.PskUiToast, HTMLStencilElement {
    }
    var HTMLPskUiToastElement: {
        prototype: HTMLPskUiToastElement;
        new (): HTMLPskUiToastElement;
    };
    interface HTMLPskUserProfileElement extends Components.PskUserProfile, HTMLStencilElement {
    }
    var HTMLPskUserProfileElement: {
        prototype: HTMLPskUserProfileElement;
        new (): HTMLPskUserProfileElement;
    };
    interface HTMLPskUserProfileRendererElement extends Components.PskUserProfileRenderer, HTMLStencilElement {
    }
    var HTMLPskUserProfileRendererElement: {
        prototype: HTMLPskUserProfileRendererElement;
        new (): HTMLPskUserProfileRendererElement;
    };
    interface HTMLPskWizardElement extends Components.PskWizard, HTMLStencilElement {
    }
    var HTMLPskWizardElement: {
        prototype: HTMLPskWizardElement;
        new (): HTMLPskWizardElement;
    };
    interface HTMLQueryPageLinkElement extends Components.QueryPageLink, HTMLStencilElement {
    }
    var HTMLQueryPageLinkElement: {
        prototype: HTMLQueryPageLinkElement;
        new (): HTMLQueryPageLinkElement;
    };
    interface HTMLQueryPagesRouterElement extends Components.QueryPagesRouter, HTMLStencilElement {
    }
    var HTMLQueryPagesRouterElement: {
        prototype: HTMLQueryPagesRouterElement;
        new (): HTMLQueryPagesRouterElement;
    };
    interface HTMLSidebarRendererElement extends Components.SidebarRenderer, HTMLStencilElement {
    }
    var HTMLSidebarRendererElement: {
        prototype: HTMLSidebarRendererElement;
        new (): HTMLSidebarRendererElement;
    };
    interface HTMLElementTagNameMap {
        "dropdown-renderer": HTMLDropdownRendererElement;
        "event-expandable-renderer": HTMLEventExpandableRendererElement;
        "expandable-renderer": HTMLExpandableRendererElement;
        "mobile-profile-renderer": HTMLMobileProfileRendererElement;
        "psk-accordion": HTMLPskAccordionElement;
        "psk-accordion-item": HTMLPskAccordionItemElement;
        "psk-app-menu": HTMLPskAppMenuElement;
        "psk-app-root": HTMLPskAppRootElement;
        "psk-app-router": HTMLPskAppRouterElement;
        "psk-attachments-list": HTMLPskAttachmentsListElement;
        "psk-barcode-generator": HTMLPskBarcodeGeneratorElement;
        "psk-barcode-scanner": HTMLPskBarcodeScannerElement;
        "psk-breadcrumb-navigator": HTMLPskBreadcrumbNavigatorElement;
        "psk-button": HTMLPskButtonElement;
        "psk-button-group": HTMLPskButtonGroupElement;
        "psk-button-link": HTMLPskButtonLinkElement;
        "psk-button-test": HTMLPskButtonTestElement;
        "psk-card": HTMLPskCardElement;
        "psk-chapter": HTMLPskChapterElement;
        "psk-chapter-wrapper": HTMLPskChapterWrapperElement;
        "psk-checkbox": HTMLPskCheckboxElement;
        "psk-code": HTMLPskCodeElement;
        "psk-condition": HTMLPskConditionElement;
        "psk-container": HTMLPskContainerElement;
        "psk-controller-descriptor": HTMLPskControllerDescriptorElement;
        "psk-copy-clipboard": HTMLPskCopyClipboardElement;
        "psk-custom": HTMLPskCustomElement;
        "psk-date": HTMLPskDateElement;
        "psk-date-input": HTMLPskDateInputElement;
        "psk-default-renderer": HTMLPskDefaultRendererElement;
        "psk-description": HTMLPskDescriptionElement;
        "psk-details": HTMLPskDetailsElement;
        "psk-echo": HTMLPskEchoElement;
        "psk-email-input": HTMLPskEmailInputElement;
        "psk-event-descriptor": HTMLPskEventDescriptorElement;
        "psk-example": HTMLPskExampleElement;
        "psk-files-chooser": HTMLPskFilesChooserElement;
        "psk-floating-menu": HTMLPskFloatingMenuElement;
        "psk-for-each": HTMLPskForEachElement;
        "psk-form": HTMLPskFormElement;
        "psk-form-row": HTMLPskFormRowElement;
        "psk-grid": HTMLPskGridElement;
        "psk-highlight": HTMLPskHighlightElement;
        "psk-hoc": HTMLPskHocElement;
        "psk-icon": HTMLPskIconElement;
        "psk-icon-chooser": HTMLPskIconChooserElement;
        "psk-img": HTMLPskImgElement;
        "psk-img-input": HTMLPskImgInputElement;
        "psk-input": HTMLPskInputElement;
        "psk-label": HTMLPskLabelElement;
        "psk-label-test": HTMLPskLabelTestElement;
        "psk-layout": HTMLPskLayoutElement;
        "psk-layout-item": HTMLPskLayoutItemElement;
        "psk-link": HTMLPskLinkElement;
        "psk-list": HTMLPskListElement;
        "psk-list-feedbacks": HTMLPskListFeedbacksElement;
        "psk-live-code": HTMLPskLiveCodeElement;
        "psk-load-placeholder": HTMLPskLoadPlaceholderElement;
        "psk-menu-item-renderer": HTMLPskMenuItemRendererElement;
        "psk-mobile": HTMLPskMobileElement;
        "psk-modal": HTMLPskModalElement;
        "psk-number-input": HTMLPskNumberInputElement;
        "psk-page": HTMLPskPageElement;
        "psk-page-loader": HTMLPskPageLoaderElement;
        "psk-page-not-found": HTMLPskPageNotFoundElement;
        "psk-page-not-found-renderer": HTMLPskPageNotFoundRendererElement;
        "psk-password-input": HTMLPskPasswordInputElement;
        "psk-pin-popup": HTMLPskPinPopupElement;
        "psk-property-descriptor": HTMLPskPropertyDescriptorElement;
        "psk-radio": HTMLPskRadioElement;
        "psk-radio-group": HTMLPskRadioGroupElement;
        "psk-route-redirect": HTMLPskRouteRedirectElement;
        "psk-select": HTMLPskSelectElement;
        "psk-slideshow": HTMLPskSlideshowElement;
        "psk-ssapp": HTMLPskSsappElement;
        "psk-stepper": HTMLPskStepperElement;
        "psk-stepper-renderer": HTMLPskStepperRendererElement;
        "psk-style": HTMLPskStyleElement;
        "psk-switch-button": HTMLPskSwitchButtonElement;
        "psk-tab": HTMLPskTabElement;
        "psk-tab-navigator": HTMLPskTabNavigatorElement;
        "psk-table": HTMLPskTableElement;
        "psk-text-input": HTMLPskTextInputElement;
        "psk-textarea": HTMLPskTextareaElement;
        "psk-toc": HTMLPskTocElement;
        "psk-toolbar": HTMLPskToolbarElement;
        "psk-ui-alert": HTMLPskUiAlertElement;
        "psk-ui-loader": HTMLPskUiLoaderElement;
        "psk-ui-toast": HTMLPskUiToastElement;
        "psk-user-profile": HTMLPskUserProfileElement;
        "psk-user-profile-renderer": HTMLPskUserProfileRendererElement;
        "psk-wizard": HTMLPskWizardElement;
        "query-page-link": HTMLQueryPageLinkElement;
        "query-pages-router": HTMLQueryPagesRouterElement;
        "sidebar-renderer": HTMLSidebarRendererElement;
    }
}
declare namespace LocalJSX {
    interface DropdownRenderer {
        "active"?: boolean;
        "somethingChanged"?: boolean;
        "url"?: any;
    }
    interface EventExpandableRenderer {
        "active"?: boolean;
        "firstMenuChild"?: any;
        "history"?: RouterHistory;
        "item"?: any;
        "somethingChanged"?: boolean;
        "url"?: any;
    }
    interface ExpandableRenderer {
        "active"?: boolean;
        "firstMenuChild"?: any;
        "history"?: RouterHistory;
        "onSectionChange"?: (event: CustomEvent<any>) => void;
        "somethingChanged"?: boolean;
        "url"?: any;
    }
    interface MobileProfileRenderer {
        "userInfo"?: any;
    }
    interface PskAccordion {
        "layout"?: string;
        "multiple"?: boolean;
    }
    interface PskAccordionItem {
        "layout"?: string;
        "opened"?: boolean;
        "title"?: string;
    }
    interface PskAppMenu {
        "hamburgerMaxWidth"?: number;
        "historyType"?: ExtendedHistoryType;
        "itemRenderer"?: string;
        "menuItems"?: MenuItem[];
        "onGetHistoryType"?: (event: CustomEvent<any>) => void;
        "onMenuEvent"?: (event: CustomEvent<any>) => void;
        "onNeedMenuItems"?: (event: CustomEvent<any>) => void;
    }
    interface PskAppRoot {
        "controller"?: any;
        "disableSidebar"?: boolean;
    }
    interface PskAppRouter {
        "historyType"?: ExtendedHistoryType;
        "onGetCustomLandingPage"?: (event: CustomEvent<any>) => void;
        "onGetHistoryType"?: (event: CustomEvent<any>) => void;
        "onNeedRoutes"?: (event: CustomEvent<any>) => void;
        "routesItems"?: MenuItem[];
    }
    interface PskAttachmentsList {
        "attachmentsClass"?: string;
        "files"?: any;
        "noAttachmentsText"?: string;
        "readOnly"?: boolean;
    }
    interface PskBarcodeGenerator {
        "data"?: any;
        "includeText"?: boolean;
        "size"?: any;
        "title"?: string;
        "type"?: string;
    }
    interface PskBarcodeScanner {
        "allowFileBrowsing"?: boolean;
        "data"?: any;
        "normalSize"?: boolean;
        "title"?: string;
    }
    interface PskBreadcrumbNavigator {
        "eventName"?: string | null;
        "segments"?: BreadcrumbSegment[];
    }
    interface PskButton {
        "buttonClass"?: string | null;
        "disabled"?: string | boolean;
        "doubleClickEventName"?: string | null;
        "eventData"?: any | null;
        "eventDispatcher"?: string | null;
        "eventName"?: string | null;
        "label"?: string | null;
        "touchEventName"?: string | null;
        "type"?: string;
    }
    interface PskButtonGroup {
        "classes"?: string | null;
        "icon"?: string | null;
        "iconColor"?: string | null;
        "label"?: string | null;
        "opened"?: boolean;
    }
    interface PskButtonLink {
        "eventData"?: any | null;
        "eventDispatcher"?: string | null;
        "eventName"?: string | null;
        "icon"?: string;
        "name"?: string;
        "page"?: string;
    }
    interface PskButtonTest {
    }
    interface PskCard {
        "id"?: string;
        "title"?: string;
    }
    interface PskChapter {
        "guid"?: string;
        "onPsk-send-chapter"?: (event: CustomEvent<any>) => void;
        "title"?: string;
    }
    interface PskChapterWrapper {
        "title"?: string;
    }
    interface PskCheckbox {
        "checkboxLabel"?: any;
        "checked"?: string;
        "checkedValue"?: string | null;
        "label"?: string;
        "name"?: string | null;
        "required"?: boolean;
        "uncheckedValue"?: string | null;
        "value"?: any;
    }
    interface PskCode {
        "language"?: string;
        "title"?: string;
    }
    interface PskCondition {
        "condition"?: any | null;
        "onGetModelEvent"?: (event: CustomEvent<any>) => void;
    }
    interface PskContainer {
        "controllerName"?: string | null;
        "history"?: RouterHistory;
        "htmlFilePath"?: string | null;
        "parentCallback"?: Function | null;
    }
    interface PskControllerDescriptor {
        "title"?: string;
    }
    interface PskCopyClipboard {
        "id"?: string;
        "onGetHistoryType"?: (event: CustomEvent<any>) => void;
    }
    interface PskCustom {
    }
    interface PskDate {
        "format"?: string | null;
        "hoverFormat"?: string | null;
        "value"?: string | number | null;
    }
    interface PskDateInput {
        "dataFormat"?: string | null;
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "name"?: string | null;
        "placeholder"?: string | null;
        "readOnly"?: boolean;
        "required"?: string;
        "value"?: string | null;
    }
    interface PskDefaultRenderer {
        "disableSidebar"?: boolean;
        "mobileLayout"?: boolean;
        "onGetAppVersion"?: (event: CustomEvent<any>) => void;
    }
    interface PskDescription {
        "title"?: string;
    }
    interface PskDetails {
        "eventData"?: any | null;
        "eventDispatcher"?: string | null;
        "eventName"?: string | null;
        "layout"?: string;
        "opened"?: boolean;
        "title"?: string;
    }
    interface PskEcho {
        "value"?: string | null;
    }
    interface PskEmailInput {
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "name"?: string | null;
        "placeholder"?: string | null;
        "readOnly"?: boolean;
        "required"?: boolean;
        "value"?: string | null;
    }
    interface PskEventDescriptor {
        "title"?: string;
    }
    interface PskExample {
        "title"?: string;
    }
    interface PskFilesChooser {
        "accept"?: string;
        "eventName"?: string;
        "filesAppend"?: boolean;
        "label"?: string;
        "listFiles"?: boolean;
    }
    interface PskFloatingMenu {
        "onNeedFloatingMenu"?: (event: CustomEvent<any>) => void;
        "opened"?: boolean;
    }
    interface PskForEach {
        "dataViewModel"?: string | null;
        "onGetModelEvent"?: (event: CustomEvent<any>) => void;
    }
    interface PskForm {
        "controllerName"?: string | null;
        "formActions"?: string | null;
        "history"?: RouterHistory;
    }
    interface PskFormRow {
        "layout"?: string | null;
    }
    interface PskGrid {
        "columns"?: number | null;
        "layout"?: string | null;
    }
    interface PskHighlight {
        "title"?: string;
        "typeOfHighlight"?: string;
    }
    interface PskHoc {
    }
    interface PskIcon {
        "classes"?: string | null;
        "color"?: string | null;
        "disableColor"?: boolean;
        "icon"?: string | null;
    }
    interface PskIconChooser {
        "iconsColor"?: string | null;
        "iconsSize"?: string | null;
        "value"?: string | null;
    }
    interface PskImg {
        "height"?: string;
        "src"?: string;
        "title"?: string;
        "width"?: string;
    }
    interface PskImgInput {
        "alt"?: string | null;
        "eventName"?: string | null;
        "label"?: string | null;
        "placeholder"?: string;
        "src"?: any | null;
    }
    interface PskInput {
        "dataDate"?: string;
        "dataDateFormat"?: string | null;
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "name"?: string | null;
        "placeholder"?: string | null;
        "readOnly"?: boolean;
        "required"?: boolean;
        /**
          * Property used only by other components psk-text-input, psk-email-input...
         */
        "specificProps"?: any;
        "type"?: string;
        "value"?: string | null;
    }
    interface PskLabel {
        "for"?: string | null;
        "label"?: string;
    }
    interface PskLabelTest {
        "firstlabel"?: any;
        "labelValue"?: any;
        "secondLabel"?: any;
        "thirdLabel"?: any;
    }
    interface PskLayout {
        "alignContent"?: string | null;
        "alignContentX"?: string | null;
        "alignContentY"?: string | null;
        "alignItems"?: string | null;
        "alignItemsX"?: string | null;
        "alignItemsY"?: string | null;
        "autoColumns"?: string | null;
        "autoFlow"?: string | null;
        "autoRows"?: string | null;
        "columnGap"?: string | null;
        "columns"?: number | null;
        "gap"?: string | null;
        "rowGap"?: string | null;
        "rows"?: number | null;
        "templateColumns"?: string | null;
        "templateRows"?: string | null;
    }
    interface PskLayoutItem {
        "align"?: string | null;
        "alignX"?: string | null;
        "alignY"?: string | null;
        "column"?: string | null;
        "columnEnd"?: string | null;
        "columnStart"?: string | null;
        "row"?: string | null;
        "rowEnd"?: string | null;
        "rowStart"?: string | null;
    }
    interface PskLink {
        "chapter"?: string;
        "onGetTags"?: (event: CustomEvent<any>) => void;
        "onValidateUrl"?: (event: CustomEvent<any>) => void;
        "page"?: string;
        "tag"?: string;
    }
    interface PskList {
        "listType"?: string;
    }
    interface PskListFeedbacks {
        "alertRenderer"?: string;
        "messagesToDisplay"?: number;
        "onOpenFeedback"?: (event: CustomEvent<any>) => void;
        "styleCustomisation"?: StyleCustomisation | string;
        "timeAlive"?: number;
        "toastRenderer"?: string;
    }
    interface PskLiveCode {
        "language"?: string;
        "value"?: string;
    }
    interface PskLoadPlaceholder {
    }
    interface PskMenuItemRenderer {
        "active"?: boolean;
        "historyType"?: ExtendedHistoryType;
        "onMenuClicked"?: (event: CustomEvent<any>) => void;
        "value"?: MenuItem;
    }
    interface PskMobile {
        "controllerName"?: string | null;
        "disableHeader"?: boolean;
        "disableSidebar"?: boolean;
        "enableBack"?: boolean;
        "history"?: RouterHistory;
        "title"?: string;
    }
    interface PskModal {
        "eventName"?: string | null;
        "expanded"?: boolean;
        "onCloseModal"?: (event: CustomEvent<any>) => void;
        "opened"?: boolean;
    }
    interface PskNumberInput {
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "name"?: string | null;
        "placeholder"?: string | null;
        "readOnly"?: boolean;
        "required"?: boolean;
        "value"?: string | null;
    }
    interface PskPage {
        "badgeBackgroundColor"?: string;
        "badgeText"?: string;
        "badgeTextColor"?: string;
        "hasToc"?: boolean;
        "navigationTitle"?: string;
        "pageClass"?: string;
        "subTitle"?: string;
        "title"?: string;
        "tocTitle"?: string;
    }
    interface PskPageLoader {
        "pageUrl"?: string;
        "type"?: string;
    }
    interface PskPageNotFound {
        "basePath"?: string;
        "pageRenderer"?: string;
        "urlDestination"?: string;
    }
    interface PskPageNotFoundRenderer {
    }
    interface PskPasswordInput {
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "name"?: string | null;
        "placeholder"?: string | null;
        "readOnly"?: boolean;
        "required"?: boolean;
        "value"?: string | null;
    }
    interface PskPinPopup {
        "onSendPin"?: (event: CustomEvent<any>) => void;
        "opened"?: boolean;
    }
    interface PskPropertyDescriptor {
        "title"?: string;
    }
    interface PskRadio {
        "checked"?: boolean;
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "name"?: string | null;
        "onOnChangeRadio"?: (event: CustomEvent<any>) => void;
        "readOnly"?: boolean;
        "value"?: string | null;
    }
    interface PskRadioGroup {
        "invalid"?: boolean;
        "label"?: string | null;
        "name"?: string | null;
        "required"?: boolean;
        "value"?: string | null;
    }
    interface PskRouteRedirect {
        "history"?: RouterHistory;
        "url"?: any;
    }
    interface PskSelect {
        "disabled"?: boolean;
        "eventData"?: any | null;
        "eventName"?: string | null;
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "placeholder"?: string | null;
        "required"?: boolean;
        "selectOptions"?: string | null;
        "selectionType"?: SelectType;
        "value"?: string | null;
    }
    interface PskSlideshow {
        "caption"?: string;
        "fadeSeconds"?: number;
        "images"?: string;
        "title"?: string;
        "visibleSeconds"?: number;
    }
    interface PskSsapp {
        "appName"?: string;
        "history"?: RouterHistory;
        "landingPath"?: string;
        "match"?: MatchResults;
        "seed"?: string;
    }
    interface PskStepper {
        "activeStep"?: WizardStep;
        "componentRender"?: string;
        "handleStepChange"?: Function;
        "wizardSteps"?: WizardStep[];
    }
    interface PskStepperRenderer {
        "activeStep"?: WizardStep;
        "handleStepChange"?: Function;
        "wizardSteps"?: WizardStep[];
    }
    interface PskStyle {
        "src"?: string | null;
    }
    interface PskSwitchButton {
        "active"?: string | null;
        "eventDispatcher"?: string | null;
        "inactive"?: string | null;
        "title"?: string | null;
        "toggleEvent"?: string | null;
    }
    interface PskTab {
        "title"?: string;
    }
    interface PskTabNavigator {
        "default"?: number;
        "layout"?: string;
    }
    interface PskTable {
        "cellsWidth"?: string;
        "footer"?: boolean;
        "header"?: boolean;
    }
    interface PskTextInput {
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "name"?: string | null;
        "placeholder"?: string | null;
        "readOnly"?: boolean;
        "required"?: boolean;
        "value"?: any;
    }
    interface PskTextarea {
        "invalidValue"?: boolean | null;
        "label"?: string | null;
        "name"?: string | null;
        "placeholder"?: string | null;
        "readOnly"?: boolean;
        "required"?: boolean;
        "value"?: string | null;
    }
    interface PskToc {
        "title"?: string;
    }
    interface PskToolbar {
        "actions"?: string | null;
        "eventData"?: string | null;
        "icons"?: boolean;
    }
    interface PskUiAlert {
        "message"?: any;
        "onCloseFeedback"?: (event: CustomEvent<any>) => void;
        "styleCustomisation"?: StyleCustomisation | string;
        "timeAlive"?: any;
        "typeOfAlert"?: string;
    }
    interface PskUiLoader {
        "shouldBeRendered"?: boolean;
    }
    interface PskUiToast {
        "message"?: any;
        "onCloseFeedback"?: (event: CustomEvent<any>) => void;
        "styleCustomisation"?: StyleCustomisation | string;
        "timeMeasure"?: string;
        "timeSinceCreation"?: number;
    }
    interface PskUserProfile {
        "onGetUserInfo"?: (event: CustomEvent<any>) => void;
        "profileRenderer"?: any;
        "userInfo"?: any;
    }
    interface PskUserProfileRenderer {
        "userInfo"?: any;
    }
    interface PskWizard {
        "componentRender"?: string;
        "onChangeStep"?: (event: CustomEvent<any>) => void;
        "onFinishWizard"?: (event: CustomEvent<any>) => void;
        "onNeedWizardConfiguration"?: (event: CustomEvent<any>) => void;
        "wizardSteps"?: WizardStep[];
    }
    interface QueryPageLink {
        "activeClass"?: string;
        "anchorClass"?: string;
        "anchorId"?: string;
        "anchorRole"?: string;
        "anchorTabIndex"?: string;
        "anchorTitle"?: string;
        "ariaHaspopup"?: string;
        "ariaLabel"?: string;
        "ariaPosinset"?: string;
        "ariaSetsize"?: number;
        /**
          * Custom tag to use instead of an anchor
         */
        "custom"?: string;
        "exact"?: boolean;
        "history"?: RouterHistory;
        "location"?: LocationSegments;
        "strict"?: boolean;
        "url"?: string;
        "urlMatch"?: string;
    }
    interface QueryPagesRouter {
        "history"?: RouterHistory;
        "location"?: LocationSegments;
        "pages"?: MenuItem[];
        "redirectTo"?: string;
    }
    interface SidebarRenderer {
        "active"?: boolean;
        "historyType"?: ExtendedHistoryType;
        "value"?: MenuItem;
    }
    interface IntrinsicElements {
        "dropdown-renderer": DropdownRenderer;
        "event-expandable-renderer": EventExpandableRenderer;
        "expandable-renderer": ExpandableRenderer;
        "mobile-profile-renderer": MobileProfileRenderer;
        "psk-accordion": PskAccordion;
        "psk-accordion-item": PskAccordionItem;
        "psk-app-menu": PskAppMenu;
        "psk-app-root": PskAppRoot;
        "psk-app-router": PskAppRouter;
        "psk-attachments-list": PskAttachmentsList;
        "psk-barcode-generator": PskBarcodeGenerator;
        "psk-barcode-scanner": PskBarcodeScanner;
        "psk-breadcrumb-navigator": PskBreadcrumbNavigator;
        "psk-button": PskButton;
        "psk-button-group": PskButtonGroup;
        "psk-button-link": PskButtonLink;
        "psk-button-test": PskButtonTest;
        "psk-card": PskCard;
        "psk-chapter": PskChapter;
        "psk-chapter-wrapper": PskChapterWrapper;
        "psk-checkbox": PskCheckbox;
        "psk-code": PskCode;
        "psk-condition": PskCondition;
        "psk-container": PskContainer;
        "psk-controller-descriptor": PskControllerDescriptor;
        "psk-copy-clipboard": PskCopyClipboard;
        "psk-custom": PskCustom;
        "psk-date": PskDate;
        "psk-date-input": PskDateInput;
        "psk-default-renderer": PskDefaultRenderer;
        "psk-description": PskDescription;
        "psk-details": PskDetails;
        "psk-echo": PskEcho;
        "psk-email-input": PskEmailInput;
        "psk-event-descriptor": PskEventDescriptor;
        "psk-example": PskExample;
        "psk-files-chooser": PskFilesChooser;
        "psk-floating-menu": PskFloatingMenu;
        "psk-for-each": PskForEach;
        "psk-form": PskForm;
        "psk-form-row": PskFormRow;
        "psk-grid": PskGrid;
        "psk-highlight": PskHighlight;
        "psk-hoc": PskHoc;
        "psk-icon": PskIcon;
        "psk-icon-chooser": PskIconChooser;
        "psk-img": PskImg;
        "psk-img-input": PskImgInput;
        "psk-input": PskInput;
        "psk-label": PskLabel;
        "psk-label-test": PskLabelTest;
        "psk-layout": PskLayout;
        "psk-layout-item": PskLayoutItem;
        "psk-link": PskLink;
        "psk-list": PskList;
        "psk-list-feedbacks": PskListFeedbacks;
        "psk-live-code": PskLiveCode;
        "psk-load-placeholder": PskLoadPlaceholder;
        "psk-menu-item-renderer": PskMenuItemRenderer;
        "psk-mobile": PskMobile;
        "psk-modal": PskModal;
        "psk-number-input": PskNumberInput;
        "psk-page": PskPage;
        "psk-page-loader": PskPageLoader;
        "psk-page-not-found": PskPageNotFound;
        "psk-page-not-found-renderer": PskPageNotFoundRenderer;
        "psk-password-input": PskPasswordInput;
        "psk-pin-popup": PskPinPopup;
        "psk-property-descriptor": PskPropertyDescriptor;
        "psk-radio": PskRadio;
        "psk-radio-group": PskRadioGroup;
        "psk-route-redirect": PskRouteRedirect;
        "psk-select": PskSelect;
        "psk-slideshow": PskSlideshow;
        "psk-ssapp": PskSsapp;
        "psk-stepper": PskStepper;
        "psk-stepper-renderer": PskStepperRenderer;
        "psk-style": PskStyle;
        "psk-switch-button": PskSwitchButton;
        "psk-tab": PskTab;
        "psk-tab-navigator": PskTabNavigator;
        "psk-table": PskTable;
        "psk-text-input": PskTextInput;
        "psk-textarea": PskTextarea;
        "psk-toc": PskToc;
        "psk-toolbar": PskToolbar;
        "psk-ui-alert": PskUiAlert;
        "psk-ui-loader": PskUiLoader;
        "psk-ui-toast": PskUiToast;
        "psk-user-profile": PskUserProfile;
        "psk-user-profile-renderer": PskUserProfileRenderer;
        "psk-wizard": PskWizard;
        "query-page-link": QueryPageLink;
        "query-pages-router": QueryPagesRouter;
        "sidebar-renderer": SidebarRenderer;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "dropdown-renderer": LocalJSX.DropdownRenderer & JSXBase.HTMLAttributes<HTMLDropdownRendererElement>;
            "event-expandable-renderer": LocalJSX.EventExpandableRenderer & JSXBase.HTMLAttributes<HTMLEventExpandableRendererElement>;
            "expandable-renderer": LocalJSX.ExpandableRenderer & JSXBase.HTMLAttributes<HTMLExpandableRendererElement>;
            "mobile-profile-renderer": LocalJSX.MobileProfileRenderer & JSXBase.HTMLAttributes<HTMLMobileProfileRendererElement>;
            "psk-accordion": LocalJSX.PskAccordion & JSXBase.HTMLAttributes<HTMLPskAccordionElement>;
            "psk-accordion-item": LocalJSX.PskAccordionItem & JSXBase.HTMLAttributes<HTMLPskAccordionItemElement>;
            "psk-app-menu": LocalJSX.PskAppMenu & JSXBase.HTMLAttributes<HTMLPskAppMenuElement>;
            "psk-app-root": LocalJSX.PskAppRoot & JSXBase.HTMLAttributes<HTMLPskAppRootElement>;
            "psk-app-router": LocalJSX.PskAppRouter & JSXBase.HTMLAttributes<HTMLPskAppRouterElement>;
            "psk-attachments-list": LocalJSX.PskAttachmentsList & JSXBase.HTMLAttributes<HTMLPskAttachmentsListElement>;
            "psk-barcode-generator": LocalJSX.PskBarcodeGenerator & JSXBase.HTMLAttributes<HTMLPskBarcodeGeneratorElement>;
            "psk-barcode-scanner": LocalJSX.PskBarcodeScanner & JSXBase.HTMLAttributes<HTMLPskBarcodeScannerElement>;
            "psk-breadcrumb-navigator": LocalJSX.PskBreadcrumbNavigator & JSXBase.HTMLAttributes<HTMLPskBreadcrumbNavigatorElement>;
            "psk-button": LocalJSX.PskButton & JSXBase.HTMLAttributes<HTMLPskButtonElement>;
            "psk-button-group": LocalJSX.PskButtonGroup & JSXBase.HTMLAttributes<HTMLPskButtonGroupElement>;
            "psk-button-link": LocalJSX.PskButtonLink & JSXBase.HTMLAttributes<HTMLPskButtonLinkElement>;
            "psk-button-test": LocalJSX.PskButtonTest & JSXBase.HTMLAttributes<HTMLPskButtonTestElement>;
            "psk-card": LocalJSX.PskCard & JSXBase.HTMLAttributes<HTMLPskCardElement>;
            "psk-chapter": LocalJSX.PskChapter & JSXBase.HTMLAttributes<HTMLPskChapterElement>;
            "psk-chapter-wrapper": LocalJSX.PskChapterWrapper & JSXBase.HTMLAttributes<HTMLPskChapterWrapperElement>;
            "psk-checkbox": LocalJSX.PskCheckbox & JSXBase.HTMLAttributes<HTMLPskCheckboxElement>;
            "psk-code": LocalJSX.PskCode & JSXBase.HTMLAttributes<HTMLPskCodeElement>;
            "psk-condition": LocalJSX.PskCondition & JSXBase.HTMLAttributes<HTMLPskConditionElement>;
            "psk-container": LocalJSX.PskContainer & JSXBase.HTMLAttributes<HTMLPskContainerElement>;
            "psk-controller-descriptor": LocalJSX.PskControllerDescriptor & JSXBase.HTMLAttributes<HTMLPskControllerDescriptorElement>;
            "psk-copy-clipboard": LocalJSX.PskCopyClipboard & JSXBase.HTMLAttributes<HTMLPskCopyClipboardElement>;
            "psk-custom": LocalJSX.PskCustom & JSXBase.HTMLAttributes<HTMLPskCustomElement>;
            "psk-date": LocalJSX.PskDate & JSXBase.HTMLAttributes<HTMLPskDateElement>;
            "psk-date-input": LocalJSX.PskDateInput & JSXBase.HTMLAttributes<HTMLPskDateInputElement>;
            "psk-default-renderer": LocalJSX.PskDefaultRenderer & JSXBase.HTMLAttributes<HTMLPskDefaultRendererElement>;
            "psk-description": LocalJSX.PskDescription & JSXBase.HTMLAttributes<HTMLPskDescriptionElement>;
            "psk-details": LocalJSX.PskDetails & JSXBase.HTMLAttributes<HTMLPskDetailsElement>;
            "psk-echo": LocalJSX.PskEcho & JSXBase.HTMLAttributes<HTMLPskEchoElement>;
            "psk-email-input": LocalJSX.PskEmailInput & JSXBase.HTMLAttributes<HTMLPskEmailInputElement>;
            "psk-event-descriptor": LocalJSX.PskEventDescriptor & JSXBase.HTMLAttributes<HTMLPskEventDescriptorElement>;
            "psk-example": LocalJSX.PskExample & JSXBase.HTMLAttributes<HTMLPskExampleElement>;
            "psk-files-chooser": LocalJSX.PskFilesChooser & JSXBase.HTMLAttributes<HTMLPskFilesChooserElement>;
            "psk-floating-menu": LocalJSX.PskFloatingMenu & JSXBase.HTMLAttributes<HTMLPskFloatingMenuElement>;
            "psk-for-each": LocalJSX.PskForEach & JSXBase.HTMLAttributes<HTMLPskForEachElement>;
            "psk-form": LocalJSX.PskForm & JSXBase.HTMLAttributes<HTMLPskFormElement>;
            "psk-form-row": LocalJSX.PskFormRow & JSXBase.HTMLAttributes<HTMLPskFormRowElement>;
            "psk-grid": LocalJSX.PskGrid & JSXBase.HTMLAttributes<HTMLPskGridElement>;
            "psk-highlight": LocalJSX.PskHighlight & JSXBase.HTMLAttributes<HTMLPskHighlightElement>;
            "psk-hoc": LocalJSX.PskHoc & JSXBase.HTMLAttributes<HTMLPskHocElement>;
            "psk-icon": LocalJSX.PskIcon & JSXBase.HTMLAttributes<HTMLPskIconElement>;
            "psk-icon-chooser": LocalJSX.PskIconChooser & JSXBase.HTMLAttributes<HTMLPskIconChooserElement>;
            "psk-img": LocalJSX.PskImg & JSXBase.HTMLAttributes<HTMLPskImgElement>;
            "psk-img-input": LocalJSX.PskImgInput & JSXBase.HTMLAttributes<HTMLPskImgInputElement>;
            "psk-input": LocalJSX.PskInput & JSXBase.HTMLAttributes<HTMLPskInputElement>;
            "psk-label": LocalJSX.PskLabel & JSXBase.HTMLAttributes<HTMLPskLabelElement>;
            "psk-label-test": LocalJSX.PskLabelTest & JSXBase.HTMLAttributes<HTMLPskLabelTestElement>;
            "psk-layout": LocalJSX.PskLayout & JSXBase.HTMLAttributes<HTMLPskLayoutElement>;
            "psk-layout-item": LocalJSX.PskLayoutItem & JSXBase.HTMLAttributes<HTMLPskLayoutItemElement>;
            "psk-link": LocalJSX.PskLink & JSXBase.HTMLAttributes<HTMLPskLinkElement>;
            "psk-list": LocalJSX.PskList & JSXBase.HTMLAttributes<HTMLPskListElement>;
            "psk-list-feedbacks": LocalJSX.PskListFeedbacks & JSXBase.HTMLAttributes<HTMLPskListFeedbacksElement>;
            "psk-live-code": LocalJSX.PskLiveCode & JSXBase.HTMLAttributes<HTMLPskLiveCodeElement>;
            "psk-load-placeholder": LocalJSX.PskLoadPlaceholder & JSXBase.HTMLAttributes<HTMLPskLoadPlaceholderElement>;
            "psk-menu-item-renderer": LocalJSX.PskMenuItemRenderer & JSXBase.HTMLAttributes<HTMLPskMenuItemRendererElement>;
            "psk-mobile": LocalJSX.PskMobile & JSXBase.HTMLAttributes<HTMLPskMobileElement>;
            "psk-modal": LocalJSX.PskModal & JSXBase.HTMLAttributes<HTMLPskModalElement>;
            "psk-number-input": LocalJSX.PskNumberInput & JSXBase.HTMLAttributes<HTMLPskNumberInputElement>;
            "psk-page": LocalJSX.PskPage & JSXBase.HTMLAttributes<HTMLPskPageElement>;
            "psk-page-loader": LocalJSX.PskPageLoader & JSXBase.HTMLAttributes<HTMLPskPageLoaderElement>;
            "psk-page-not-found": LocalJSX.PskPageNotFound & JSXBase.HTMLAttributes<HTMLPskPageNotFoundElement>;
            "psk-page-not-found-renderer": LocalJSX.PskPageNotFoundRenderer & JSXBase.HTMLAttributes<HTMLPskPageNotFoundRendererElement>;
            "psk-password-input": LocalJSX.PskPasswordInput & JSXBase.HTMLAttributes<HTMLPskPasswordInputElement>;
            "psk-pin-popup": LocalJSX.PskPinPopup & JSXBase.HTMLAttributes<HTMLPskPinPopupElement>;
            "psk-property-descriptor": LocalJSX.PskPropertyDescriptor & JSXBase.HTMLAttributes<HTMLPskPropertyDescriptorElement>;
            "psk-radio": LocalJSX.PskRadio & JSXBase.HTMLAttributes<HTMLPskRadioElement>;
            "psk-radio-group": LocalJSX.PskRadioGroup & JSXBase.HTMLAttributes<HTMLPskRadioGroupElement>;
            "psk-route-redirect": LocalJSX.PskRouteRedirect & JSXBase.HTMLAttributes<HTMLPskRouteRedirectElement>;
            "psk-select": LocalJSX.PskSelect & JSXBase.HTMLAttributes<HTMLPskSelectElement>;
            "psk-slideshow": LocalJSX.PskSlideshow & JSXBase.HTMLAttributes<HTMLPskSlideshowElement>;
            "psk-ssapp": LocalJSX.PskSsapp & JSXBase.HTMLAttributes<HTMLPskSsappElement>;
            "psk-stepper": LocalJSX.PskStepper & JSXBase.HTMLAttributes<HTMLPskStepperElement>;
            "psk-stepper-renderer": LocalJSX.PskStepperRenderer & JSXBase.HTMLAttributes<HTMLPskStepperRendererElement>;
            "psk-style": LocalJSX.PskStyle & JSXBase.HTMLAttributes<HTMLPskStyleElement>;
            "psk-switch-button": LocalJSX.PskSwitchButton & JSXBase.HTMLAttributes<HTMLPskSwitchButtonElement>;
            "psk-tab": LocalJSX.PskTab & JSXBase.HTMLAttributes<HTMLPskTabElement>;
            "psk-tab-navigator": LocalJSX.PskTabNavigator & JSXBase.HTMLAttributes<HTMLPskTabNavigatorElement>;
            "psk-table": LocalJSX.PskTable & JSXBase.HTMLAttributes<HTMLPskTableElement>;
            "psk-text-input": LocalJSX.PskTextInput & JSXBase.HTMLAttributes<HTMLPskTextInputElement>;
            "psk-textarea": LocalJSX.PskTextarea & JSXBase.HTMLAttributes<HTMLPskTextareaElement>;
            "psk-toc": LocalJSX.PskToc & JSXBase.HTMLAttributes<HTMLPskTocElement>;
            "psk-toolbar": LocalJSX.PskToolbar & JSXBase.HTMLAttributes<HTMLPskToolbarElement>;
            "psk-ui-alert": LocalJSX.PskUiAlert & JSXBase.HTMLAttributes<HTMLPskUiAlertElement>;
            "psk-ui-loader": LocalJSX.PskUiLoader & JSXBase.HTMLAttributes<HTMLPskUiLoaderElement>;
            "psk-ui-toast": LocalJSX.PskUiToast & JSXBase.HTMLAttributes<HTMLPskUiToastElement>;
            "psk-user-profile": LocalJSX.PskUserProfile & JSXBase.HTMLAttributes<HTMLPskUserProfileElement>;
            "psk-user-profile-renderer": LocalJSX.PskUserProfileRenderer & JSXBase.HTMLAttributes<HTMLPskUserProfileRendererElement>;
            "psk-wizard": LocalJSX.PskWizard & JSXBase.HTMLAttributes<HTMLPskWizardElement>;
            "query-page-link": LocalJSX.QueryPageLink & JSXBase.HTMLAttributes<HTMLQueryPageLinkElement>;
            "query-pages-router": LocalJSX.QueryPagesRouter & JSXBase.HTMLAttributes<HTMLQueryPagesRouterElement>;
            "sidebar-renderer": LocalJSX.SidebarRenderer & JSXBase.HTMLAttributes<HTMLSidebarRendererElement>;
        }
    }
}
